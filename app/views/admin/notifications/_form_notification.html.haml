= effective_form_with(model: [:admin, notification], engine: true) do |f|
  %h2 Audience
  %p Send this notification to the following:
  = f.select :audience, Effective::Notification::AUDIENCES

  = f.show_if(:audience, 'report') do
    %p A notification will be sent to each email or user from the data source.

  = f.show_if(:audience, 'emails') do
    %p A single notification will be sent to the following email addresses:

    = f.select :audience_emails, f.object.audience_emails, multiple: true, tags: true, hint: 'Add one or more email address by pressing enter'
    = f.check_box :attach_report, label: 'Yes, attach a .csv file with the report data'

  %h2 Data Source
  %p
    Please select a
    = link_to 'report', effective_reports.admin_reports_path, target: '_blank'
    to use as the data source.

  .row
    .col-md-6
      = f.select :report_id, Effective::Report.sorted.notifiable.all,
        hint: 'A report with an email or user column is required when sending to each email from the data source.',
        'data-load-ajax-url': effective_messaging.new_admin_notification_path,
        'data-load-ajax-div': '#effective-messaging-ajax'

  %h2 Schedule
  %p Please select how and when the notifications should be sent

  = f.check_box :enabled, label: "Yes, this notification is enabled and notification emails should be sent"

  = f.show_if(:enabled, true) do
    = f.select :schedule_type, Effective::Notification::SCHEDULE_TYPES

    = f.show_if(:schedule_type, 'immediate') do
      %p
        %strong Send on the first day they appear in the data source

      .d-flex
        Send notification immediately and then every
        .mx-3= f.number_field :immediate_days, label: false, min: 0, max: 365
        day(s) thereafter, for
        .mx-3= f.number_field :immediate_times, label: false, min: 1, max: 1000
        total notification(s).

    = f.show_if(:schedule_type, 'scheduled') do
      %p
        %strong Send on a scheduled recurring date

      = f.radios :scheduled_method, Effective::Notification::SCHEDULED_METHODS, label: false, required: true

      = f.show_if(:scheduled_method, 'dates') do
        = f.select :scheduled_dates, f.object.scheduled_dates, multiple: true, tags: true, hint: 'Add one or more dates by pressing enter. Please input in the format YYYY-MM-DD'

  -# .row
  -#   .col-md-6
  -#     - minDate = [f.object.created_at, Time.zone.now].compact.min

  -#     = f.datetime_field :send_at, label: 'Send the notification at', input_js: { minDate: minDate.strftime('%F %H:%M:%S') },
  -#       hint: 'A future date. Changing this value will reset the started_at and completed_at dates so this notification can be sent again.'
  -#   .col-md-6
  -#     - if f.object.completed_at.present?
  -#       = f.static_field :completed_at
  -#     - elsif f.object.started_at.present?
  -#       = f.static_field :started_at

  %h2 Notification
  %p The following notification will be sent to each row in the data source

  - froms = Array(EffectiveMessaging.froms)

  - if froms.present?
    - f.object.from ||= froms.first
    = f.select :from, Array(froms)
  - else
    = f.email_field :from

  = f.email_field :bcc
  = f.text_field :subject
  = f.text_area :body

  #effective-messaging-ajax
    - if f.object.report.present?
      %p You can use the following variables in the subject and body:

      %ul
        - f.object.report_variables.each do |name|
          %li {{ #{name} }}

  = f.submit do
    = f.save 'Save'

    - if EffectiveResources.authorized?(self, :send_now, f.object)
      = f.save 'Send Now', class: 'btn btn-warning', 'data-confirm': "Really send now?"

    = f.save 'Add New', class: 'btn btn-secondary'
    = f.save 'Continue', class: 'btn btn-secondary'
